apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app-deploy
  labels:
    app: {{ .Release.Name }}-app-deploy
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}

  selector:
    matchLabels:
      project: {{ .Release.Name }}-app-deploy
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        project: {{ .Release.Name }}-app-deploy
    spec:
      restartPolicy: {{ .Values.container.restartPolicy }}
      containers:
        - name: {{ .Release.Name }}-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.container.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.targetPort }}
      initContainers:
        - name: schema-migration
          image: flyway/flyway
          args: [ 'migrate' ]
          env:
            - name: FLYWAY_LOCATIONS
              value: 'filesystem:/flyway/migrations'
          envFrom:
            - configMapRef:
                name: user-service-cm
          volumeMounts:
            - name: user-volume
              mountPath: /flyway/migrations
      volumes:
        - name: user-volume
          configMap:
            name: postgres-user-cm

